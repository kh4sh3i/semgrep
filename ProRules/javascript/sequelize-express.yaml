rules:
  - id: sequelize-express
    message: Untrusted input might be used to build a database query, which can lead
      to a SQL injection vulnerability. An attacker can execute malicious SQL
      statements and gain unauthorized access to sensitive data, modify, delete
      data, or execute arbitrary system commands. To prevent this vulnerability,
      use prepared statements that do not concatenate user-controllable strings
      and use parameterized queries where SQL commands and user data are
      strictly separated. Also, consider using an object-relational (ORM)
      framework to operate with safer abstractions.
    severity: ERROR
    metadata:
      likelihood: HIGH
      impact: HIGH
      confidence: HIGH
      category: security
      subcategory:
        - vuln
      cwe:
        - "CWE-89: Improper Neutralization of Special Elements used in an SQL
          Command ('SQL Injection')"
      cwe2020-top25: true
      cwe2021-top25: true
      cwe2022-top25: true
      display-name: SQL Injection in Sequelize with Express
      functional-categories:
        - db::sink::sql-or-nosql-query::sequelize
        - web::source::cookie::express
        - web::source::form-data::express
        - web::source::header::express
        - web::source::http-body::express
        - web::source::http-params::express
        - web::source::url-path-params::express
      owasp:
        - A01:2017 - Injection
        - A03:2021 - Injection
      references:
        - https://owasp.org/Top10/A03_2021-Injection
      supersedes:
        - javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection
        - javascript.sequelize.security.audit.sequelize-raw-query.sequelize-raw-query
      technology:
        - express
        - nodejs
        - sequelize
        - web
      license: Semgrep Rules License v1.0. For more details, visit
        semgrep.dev/legal/rules-license
      vulnerability_class:
        - SQL Injection
    languages:
      - javascript
      - typescript
    mode: taint
    min-version: 1.91.0
    options:
      interfile: true
      symbolic_propagation: true
      taint_assume_safe_booleans: true
      taint_assume_safe_numbers: true
    pattern-sources:
      - pattern-either:
          - patterns:
              - pattern-either:
                  - pattern-inside: function ... ($REQ, $RES) {...}
                  - pattern-inside: function ... ($REQ, $RES, $NEXT) {...}
              - focus-metavariable: $REQ
              - pattern-either:
                  - pattern: $REQ.query
                  - pattern: $REQ.body
                  - pattern: $REQ.cookies
                  - pattern: $REQ.headers
                  - pattern: $REQ.headersDistinct
                  - pattern: $REQ.rawHeaders
                  - pattern: $REQ.get(...)
                  - pattern: $REQ.header(...)
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      function ... ({ $REQ }: Request, $RES) {...}
                  - pattern-inside: |
                      function ... ({ $REQ }: $EXPRESS.Request, $RES) {...}
                  - pattern-inside: |
                      function ... ({ $REQ }: Request, $RES, $NEXT) {...}
                  - pattern-inside: >
                      function ... ({ $REQ }: $EXPRESS.Request, $RES, $NEXT)
                      {...}
              - focus-metavariable: $REQ
              - pattern-either:
                  - pattern: query
                  - pattern: body
                  - pattern: cookies
                  - pattern: headers
                  - pattern: headersDistinct
                  - pattern: rawHeaders
                  - pattern: get(...)
                  - pattern: header(...)
      - pattern-either:
          - patterns:
              - pattern-either:
                  - pattern-inside: function ... ($REQ, $RES) {...}
                  - pattern-inside: function ... ($REQ, $RES, $NEXT) {...}
              - focus-metavariable: $REQ
              - pattern-either:
                  - pattern: $REQ.params
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      function ... ({ $REQ }: Request, $RES) {...}
                  - pattern-inside: |
                      function ... ({ $REQ }: $EXPRESS.Request, $RES) {...}
                  - pattern-inside: |
                      function ... ({ $REQ }: Request, $RES, $NEXT) {...}
                  - pattern-inside: >
                      function ... ({ $REQ }: $EXPRESS.Request, $RES, $NEXT)
                      {...}
              - focus-metavariable: $REQ
              - pattern-either:
                  - pattern: params
      - label: FILES
        patterns:
          - pattern-either:
              - patterns:
                  - pattern-either:
                      - pattern-inside: function ... ($REQ, $RES) {...}
                      - pattern-inside: function ... ($REQ, $RES, $NEXT) {...}
                  - focus-metavariable: $REQ
                  - pattern-either:
                      - pattern: $REQ.file
                      - pattern: $REQ.files
              - patterns:
                  - pattern-either:
                      - pattern-inside: |
                          function ... ({ $REQ }: Request, $RES) {...}
                      - pattern-inside: |
                          function ... ({ $REQ }: $EXPRESS.Request, $RES) {...}
                      - pattern-inside: |
                          function ... ({ $REQ }: Request, $RES, $NEXT) {...}
                      - pattern-inside: >
                          function ... ({ $REQ }: $EXPRESS.Request, $RES, $NEXT)
                          {...}
                  - focus-metavariable: $REQ
                  - pattern-either:
                      - pattern: file
                      - pattern: files
      - label: __SOURCE__
        patterns:
          - patterns:
              - pattern-either:
                  - pattern: $FILE.originalname
                  - pattern: $FILE.fieldname
                  - pattern: $FILE.mimetype
                  - pattern: $FILE.buffer
        requires: FILES
    pattern-sinks:
      - patterns:
          - pattern-either:
              - pattern: $DB.sequelize.query($SINK, ...)
              - pattern: |
                  ($DB: Sequelize).query($SINK,...)
          - focus-metavariable: $SINK
    pattern-sanitizers:
      - patterns:
          - pattern-either:
              - pattern: Number(...)
              - pattern: parseInt(...)
              - pattern: parseFloat(...)
              - pattern: Number.parseInt(...)
              - pattern: Number.parseFloat(...)
      - patterns:
          - pattern: $UUID.$FUNC(...)
          - metavariable-regex:
              metavariable: $FUNC
              regex: (version|validate|v6ToV1)
          - semgrep-internal-metavariable-name:
              metavariable: $UUID
              module: uuid
      - patterns:
          - pattern: $DATE(...)
          - semgrep-internal-metavariable-name:
              metavariable: $DATE
              modules:
                - date-fns
                - date-fns/fp
                - moment
                - luxon
                - dayjs
      - patterns:
          - pattern: $DATE.$FUNC(...)
          - metavariable-regex:
              metavariable: $FUNC
              regex: (utc|parseZone|tz)
          - semgrep-internal-metavariable-name:
              metavariable: $DATE
              module: moment
      - patterns:
          - pattern: $DATE.parseJSON(...)
          - semgrep-internal-metavariable-name:
              metavariable: $DATE
              modules:
                - date-fns
                - date-fns/fp
      - patterns:
          - pattern: $DATE.DateTime.$FUNC(...)
          - metavariable-regex:
              metavariable: $FUNC
              regex: (fromISO|fromFormat|fromObject|fromString|fromSQL|fromHTTP|fromRFC2822|fromFormatExplain|fromStringExplain|fromFormatParser)
          - semgrep-internal-metavariable-name:
              metavariable: $DATE
              modules:
                - luxon
      - patterns:
          - pattern: $DATE.$OBJ.$FUNC(...)
          - metavariable-regex:
              metavariable: $OBJ
              regex: (LocalDate|LocalDateTime|LocalTime|OffsetDateTime|OffsetTime|ZonedDateTime|DateTimeFormatter|OffsetDate|LocalDateRange|OffsetDate)
          - metavariable-regex:
              metavariable: $FUNC
              regex: (parse|parse1|parse2)
          - semgrep-internal-metavariable-name:
              metavariable: $DATE
              modules:
                - "@js-joda/core"
                - "@js-joda/timezone"
                - "@js-joda/locale"
                - "@js-joda/extra"
      - pattern-either:
          - pattern: new Date(...)
          - pattern: Intl. ... .format(...)
      - by-side-effect: true
        patterns:
          - pattern: $VALIDATOR.$FUNC($SINK,...)
          - focus-metavariable: $SINK
          - semgrep-internal-metavariable-name:
              metavariable: $VALIDATOR
              module: validator
          - pattern-not: $V.contains(...)
          - pattern-not: $V.equals(...)
          - pattern-not: $V.isAfter(...)
          - pattern-not: $V.isJSON(...)
          - pattern-not: $V.isLength(...)
          - pattern-not: $V.isLowercase(...)
          - pattern-not: $V.isMultibyte(...)
          - pattern-not: $V.isStrongPassword(...)
          - pattern-not: $V.isURL(...)
          - pattern-not: $V.isUppercase(...)
          - pattern-not: $V.isVariableWidth(...)
          - pattern-not: $V.matches(...)
          - pattern-not: $V.unescape(...)
          - pattern-not: $V.trim(...)
          - pattern-not: $V.ltrim(...)
          - pattern-not: $V.rtrim(...)
