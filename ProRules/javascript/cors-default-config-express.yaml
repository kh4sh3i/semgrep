rules:
  - id: cors-default-config-express
    message: Having default CORS settings is insecure because they often allow
      overly permissive cross-origin access, exposing your application to
      unauthorized data sharing, potentially exposing sensitive data to
      malicious websites. Avoid using wildcard (*) origins, especially for
      endpoints that handle sensitive data. Use a restrictive CORS policy by
      explicitly specifying trusted origins in the Access-Control-Allow-Origin
      header.
    severity: WARNING
    metadata:
      likelihood: MEDIUM
      impact: MEDIUM
      confidence: HIGH
      category: security
      subcategory:
        - vuln
      cwe:
        - "CWE-346: Origin Validation Error"
      display-name: CORS Misconfiguration with Express
      functional-categories:
        - web::sink::header::cors
      owasp:
        - A07:2021 - Identification and Authentication Failures
      references:
        - https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures
        - https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes
      technology:
        - cors
        - express
      license: Semgrep Rules License v1.0. For more details, visit
        semgrep.dev/legal/rules-license
      vulnerability_class:
        - Improper Authentication
    languages:
      - javascript
      - typescript
    min-version: 1.91.0
    patterns:
      - patterns:
          - pattern: $CORS()
          - semgrep-internal-metavariable-name:
              metavariable: $CORS
              modules:
                - cors
