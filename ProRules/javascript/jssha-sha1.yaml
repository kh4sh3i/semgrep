rules:
  - id: jssha-sha1
    message: The SHA1 hashing algorithm is considered to be weak. If this is used in
      any sensitive operation such as password hashing, or is used to ensure
      data integrity (collision sensitive) then you should use a stronger
      hashing algorithm. For passwords, consider using `Argon2id`, `scrypt`, or
      `bcrypt`. For data integrity, consider using `SHA-256`.
    severity: WARNING
    metadata:
      likelihood: LOW
      impact: MEDIUM
      confidence: LOW
      category: security
      subcategory:
        - audit
      cwe:
        - "CWE-327: Use of a Broken or Risky Cryptographic Algorithm"
      functional-categories:
        - crypto::search::hash-algorithm::jssha
      owasp:
        - A03:2017 - Sensitive Data Exposure
        - A02:2021 - Cryptographic Failures
      references:
        - https://owasp.org/Top10/A02_2021-Cryptographic_Failures
      technology:
        - node.js
      license: Semgrep Rules License v1.0. For more details, visit
        semgrep.dev/legal/rules-license
      vulnerability_class:
        - Cryptographic Issues
    languages:
      - js
    patterns:
      - pattern-either:
          - pattern-inside: |
              $X = require("jssha")
              ...
          - pattern-inside: |
              $X = require("jssha/sha1")
              ...
          - pattern-inside: |
              $X = require("jssha/dist/sha1")
              ...
          - pattern-inside: |
              import $X from "jssha"
              ...
      - pattern: new $X("SHA-1",...)
