rules:
  - id: object-assign-nestjs
    message: JSON injection occurs when untrusted input is incorporated into a
      JavaScript object without proper validation or sanitization. When using
      methods like Object.assign, malicious input can override or add unintended
      properties to the object. Attackers may inject properties that alter the
      application's behavior. Validate the structure and content of input data
      to ensure it adheres to expected schemas. Reject inputs containing
      unexpected or disallowed properties.
    severity: ERROR
    metadata:
      likelihood: MEDIUM
      impact: HIGH
      confidence: HIGH
      category: security
      subcategory:
        - vuln
      cwe:
        - "CWE-74: Improper Neutralization of Special Elements in Output Used by
          a Downstream Component ('Injection')"
      display-name: JSON Injection with NestJS
      functional-categories:
        - object::sink::property::nodejs
        - web::source::cookie::nestjs
        - web::source::form-data::nestjs
        - web::source::header::nestjs
        - web::source::http-body::nestjs
        - web::source::http-params::nestjs
        - web::source::url-path-params::nestjs
      owasp:
        - A03:2021 - Injection
      references:
        - https://owasp.org/Top10/A03_2021-Injection
      technology:
        - express
        - nestjs
        - nodejs
        - web
      license: Semgrep Rules License v1.0. For more details, visit
        semgrep.dev/legal/rules-license
      vulnerability_class:
        - Other
    languages:
      - javascript
      - typescript
    mode: taint
    min-version: 1.98.0
    options:
      interfile: true
      symbolic_propagation: true
      taint_assume_safe_functions: true
    pattern-sources:
      - patterns:
          - pattern-either:
              - pattern: function $FN(..., @Request(...) $Q, ...) {...}
              - pattern: function $FN(..., @Req(...) $Q, ...) {...}
              - pattern: function $FN(..., @Response(...) $Q, ...) {...}
              - pattern: function $FN(..., @Res(...) $Q, ...) {...}
              - pattern: function $FN(..., @Body(...) $Q, ...) {...}
              - pattern: function $FN(..., @Headers(...) $Q, ...) {...}
              - pattern: function $FN(..., @Query(...) $Q, ...) {...}
          - focus-metavariable: $Q
      - label: FILES
        patterns:
          - patterns:
              - pattern-either:
                  - pattern: function $FN(..., @UploadedFile(...) $Q, ...) {...}
                  - pattern: function $FN(..., @UploadedFiles(...) $Q, ...) {...}
              - focus-metavariable: $Q
      - label: __SOURCE__
        patterns:
          - patterns:
              - pattern-either:
                  - pattern: $FILE.originalname
                  - pattern: $FILE.fieldname
                  - pattern: $FILE.mimetype
                  - pattern: $FILE.buffer
        requires: FILES
    pattern-sinks:
      - patterns:
          - pattern-either:
              - pattern: Object.assign($OBJ, ..., $SINK, ...)
          - focus-metavariable: $SINK
    pattern-sanitizers:
      - patterns:
          - pattern-either:
              - pattern: Number(...)
              - pattern: parseInt(...)
              - pattern: parseFloat(...)
              - pattern: Number.parseInt(...)
              - pattern: Number.parseFloat(...)
      - patterns:
          - pattern: $UUID.$FUNC(...)
          - metavariable-regex:
              metavariable: $FUNC
              regex: (version|validate|v6ToV1)
          - semgrep-internal-metavariable-name:
              metavariable: $UUID
              module: uuid
      - patterns:
          - pattern: $DATE(...)
          - semgrep-internal-metavariable-name:
              metavariable: $DATE
              modules:
                - date-fns
                - date-fns/fp
                - moment
                - luxon
                - dayjs
      - patterns:
          - pattern: $DATE.$FUNC(...)
          - metavariable-regex:
              metavariable: $FUNC
              regex: (utc|parseZone|tz)
          - semgrep-internal-metavariable-name:
              metavariable: $DATE
              module: moment
      - patterns:
          - pattern: $DATE.parseJSON(...)
          - semgrep-internal-metavariable-name:
              metavariable: $DATE
              modules:
                - date-fns
                - date-fns/fp
      - patterns:
          - pattern: $DATE.DateTime.$FUNC(...)
          - metavariable-regex:
              metavariable: $FUNC
              regex: (fromISO|fromFormat|fromObject|fromString|fromSQL|fromHTTP|fromRFC2822|fromFormatExplain|fromStringExplain|fromFormatParser)
          - semgrep-internal-metavariable-name:
              metavariable: $DATE
              modules:
                - luxon
      - patterns:
          - pattern: $DATE.$OBJ.$FUNC(...)
          - metavariable-regex:
              metavariable: $OBJ
              regex: (LocalDate|LocalDateTime|LocalTime|OffsetDateTime|OffsetTime|ZonedDateTime|DateTimeFormatter|OffsetDate|LocalDateRange|OffsetDate)
          - metavariable-regex:
              metavariable: $FUNC
              regex: (parse|parse1|parse2)
          - semgrep-internal-metavariable-name:
              metavariable: $DATE
              modules:
                - "@js-joda/core"
                - "@js-joda/timezone"
                - "@js-joda/locale"
                - "@js-joda/extra"
      - pattern-either:
          - pattern: new Date(...)
          - pattern: Intl. ... .format(...)
      - by-side-effect: true
        patterns:
          - pattern: $VALIDATOR.$FUNC($SINK,...)
          - focus-metavariable: $SINK
          - semgrep-internal-metavariable-name:
              metavariable: $VALIDATOR
              module: validator
          - pattern-not: $V.contains(...)
          - pattern-not: $V.equals(...)
          - pattern-not: $V.isAfter(...)
          - pattern-not: $V.isJSON(...)
          - pattern-not: $V.isLength(...)
          - pattern-not: $V.isLowercase(...)
          - pattern-not: $V.isMultibyte(...)
          - pattern-not: $V.isStrongPassword(...)
          - pattern-not: $V.isURL(...)
          - pattern-not: $V.isUppercase(...)
          - pattern-not: $V.isVariableWidth(...)
          - pattern-not: $V.matches(...)
          - pattern-not: $V.unescape(...)
          - pattern-not: $V.trim(...)
          - pattern-not: $V.ltrim(...)
          - pattern-not: $V.rtrim(...)
